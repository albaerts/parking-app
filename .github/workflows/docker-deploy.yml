name: CI / Build, Publish Images & Deploy

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build and push Docker images to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: backend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/parking-backend:${{ env.IMAGE_TAG }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/parking-frontend:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Server (pull images & up)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ secrets.SSH_PRIVATE_KEY != '' && secrets.SSH_HOST != '' && secrets.REMOTE_PATH != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run remote deploy script
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            cd ${{ secrets.REMOTE_PATH }}
            echo "Running remote deploy helper: ./deploy/update.sh ${{ env.IMAGE_TAG }}"
            # Ensure deploy script is executable
            chmod +x ./deploy/update.sh || true
            ./deploy/update.sh ${{ env.IMAGE_TAG }}
