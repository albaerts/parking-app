name: Build and push Docker images to GHCR

on:
  push:
    branches: [ main, deploy/fix-db-nginx ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for cross-platform builds)
        uses: docker/setup-qemu-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/parking-backend:latest
            ghcr.io/${{ github.repository_owner }}/parking-backend:${{ github.sha }}
          platforms: linux/amd64

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/parking-frontend:latest
            ghcr.io/${{ github.repository_owner }}/parking-frontend:${{ github.sha }}
          platforms: linux/amd64

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    runs-on: ubuntu-latest
    # Run deploy on main and the deploy/fix-db-nginx branch
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy/fix-db-nginx' }}

    steps:
      - name: Deploy via SSH to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script: |
            set -euo pipefail
            cd /var/www/parkingsrv || exit 1
            # If a GHCR token is provided, login so docker pull can authenticate (optional)
            if [ -n "${DEPLOY_GHCR_TOKEN:-}" ]; then
              echo "Logging into ghcr.io"
              echo "${DEPLOY_GHCR_TOKEN}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin || true
            fi
            echo "Fetching latest repo and running deploy/update.sh"
            git fetch origin || true
            git reset --hard origin/main || true
            ./deploy/update.sh latest || true
        env:
          DEPLOY_GHCR_TOKEN: ${{ secrets.DEPLOY_GHCR_TOKEN }}
